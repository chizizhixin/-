一
1.A
2.B  D
3.C
4.D
5.B
6.C   A
7.C  B
8.A
9.D
10.B
11.C
12.B
13.A
二.
1.  k1,k2是开始结点   k6,k7是终端结点
2.
B(D,R)
D{K1,k2,k3,k4,k5,k6,k7,k8,k9}
R{<k1,k2>,<k1,k3>,<k3,k4>,<k3,k6>,<k4,k5>,<k6,k7>,<k6,k8>,<k8,k9>}
3.0(N*M)
4.0(n)
5.0(n^2)
6..0(n^2)
7.时间复杂度无穷大
三.
1.数据元素   数据元素关系
2.集合结构，线性结构，树状结构，网络结构
3.反映数据元素之间逻辑关系的数据结构
4.表示
5.逻辑特性 计算机内部如和实现和表示无关
6.时间复杂度和空间复杂度
7.逻辑结构   存储结构
8.输入，输出，可穷性，确定性，可行性
9.n
10.n
四.
1.是一门侧重研究非数值计算的程序设计问题中计算机的操作对象及其之间关系与计算操作的学科。
2.（1）顺序存储方式。数据元素顺序存放，每个存储结点只含一个元素。存储位置反映数据元素 间的逻辑关系。存储密度大，但有些操作（如插入、删除）效率较差。
（2）链式存储方式。每个存储结点除包含数据元素信息外还包含一组（至少一个）指针。指针 反映数据元素间的逻辑关系。这种方式不要求存储空间连续，便于动态操作（如插入、删除等）， 但存储空间开销大（用于指针），另外不能折半查找等。 
（3）索引存储方式。除数据元素存储在一地址连续的内存空间外，尚需建立一个索引表，索引 表中索引指示存储结点的存储位置（下标）或存储区间端点（下标），兼有静态和动态特性。
 （4）散列存储方式。通过散列函数和解决冲突的方法，将关键字散列在连续的有限的地址空间 内，并将散列函数的值解释成关键字所在元素的存储地址，这种存储方式称为散列存储。其特点 是存取速度快，只能按关键字随机存取，不能顺序存取，也不能折半存取。
3.数据类型是程序设计语言中的一个概念，它是一个值的集合和操作的集合。如C语言中的整型、实型、字符型等。整型值的范围（对具体机器都应有整数范围），其操作有加、减、乘、除、求余等。实际上数据类型是厂家提供给用户的已实现了的数据结构。“抽象数据类型（ADT）”指一个数学模型及定义在该模型上的一组操作。“抽象”的意义在于数据类型的数学抽象特性。抽象数据类型的定义仅取决于它的逻辑特性，而与其在计算机内部如何表示和实现无关。无论其内部结构如何变化，只要它的数学特性不变就不影响它的外部使用。抽象数据类型和数据类型实质上是一个概念。此外，抽象数据类型的范围更广，它已不再局限于机器已定义和实现的数据类型，还包括用户在设计软件系统时自行定义的数据类型。使用抽象数据类型定义的软件模块含定义、表示和实现三部分，封装在一起，对用户透明（提供接口），而不必了解实现细节。抽象数据类型的出现使程序设计不再是“艺术”，而是向“科学”迈进了一步。 
4.
(1)
(2)
(3)
(5)时间复杂度和空间复杂度
5.算法的正确性,算法的易读性,是算法的健壮性,是算法的时空效率（运行）
6.(1)描述该算法的运行时间
(2)指解题方案的准确而完整的描述
（3）指一个定义变量在它的函数中，并且是它在执行到该段语句为止时，这个定义变量在函数总共执行基本操作的次数。
7.线性和非线性
8.逻辑结构，存储结构，对数据的运算
9.D是数据元素的有限集合，S是D上数据元素之间关系的有限集合。
10.顺序存储方式，链式存储方式， 索引存储方式，散列存储方式
